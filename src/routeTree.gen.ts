/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestIdImport } from './routes/test/$id'

// Create Virtual Routes

const FloorCareLazyImport = createFileRoute('/floor-care')()
const ContactUsLazyImport = createFileRoute('/contact-us')()
const CleaningServicesLazyImport = createFileRoute('/cleaning-services')()
const IndexLazyImport = createFileRoute('/')()
const DistIndexLazyImport = createFileRoute('/dist/')()

// Create/Update Routes

const FloorCareLazyRoute = FloorCareLazyImport.update({
  path: '/floor-care',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/floor-care.lazy').then((d) => d.Route))

const ContactUsLazyRoute = ContactUsLazyImport.update({
  path: '/contact-us',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact-us.lazy').then((d) => d.Route))

const CleaningServicesLazyRoute = CleaningServicesLazyImport.update({
  path: '/cleaning-services',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/cleaning-services.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DistIndexLazyRoute = DistIndexLazyImport.update({
  path: '/dist/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dist/index.lazy').then((d) => d.Route))

const TestIdRoute = TestIdImport.update({
  path: '/test/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cleaning-services': {
      id: '/cleaning-services'
      path: '/cleaning-services'
      fullPath: '/cleaning-services'
      preLoaderRoute: typeof CleaningServicesLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact-us': {
      id: '/contact-us'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof ContactUsLazyImport
      parentRoute: typeof rootRoute
    }
    '/floor-care': {
      id: '/floor-care'
      path: '/floor-care'
      fullPath: '/floor-care'
      preLoaderRoute: typeof FloorCareLazyImport
      parentRoute: typeof rootRoute
    }
    '/test/$id': {
      id: '/test/$id'
      path: '/test/$id'
      fullPath: '/test/$id'
      preLoaderRoute: typeof TestIdImport
      parentRoute: typeof rootRoute
    }
    '/dist/': {
      id: '/dist/'
      path: '/dist/'
      fullPath: '/dist/'
      preLoaderRoute: typeof DistIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CleaningServicesLazyRoute,
  ContactUsLazyRoute,
  FloorCareLazyRoute,
  TestIdRoute,
  DistIndexLazyRoute,
})

/* prettier-ignore-end */
